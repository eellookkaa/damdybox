import logging
from aiogram import Bot, Dispatcher, executor, types

import os
API_TOKEN = os.getenv("BOT_TOKEN")

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
@dp.message_handler(commands=["start"])
async def send_welcome(message: types.Message):
    text = (
        "–ü—Ä–∏–≤–µ—Ç! –Ø D√°mdyBox ü§ñ\n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞—Ö–æ–¥–∏—Ç—å –≤–∫—É—Å–Ω—ã–µ –Ω–∞–±–æ—Ä—ã –µ–¥—ã –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º üéÅ\n\n"
        "üëâ –ù–∞–∂–º–∏ /menu, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±–æ–∫—Å—ã."
    )
    await message.answer(text)


# –ü—Ä–æ—Å—Ç–æ–µ –º–µ–Ω—é
@dp.message_handler(commands=["menu"])
async def show_menu(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("üç± –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–æ–∫—Å—ã", "‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ")
    await message.answer("–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)


# –û—Ç–≤–µ—Ç—ã –Ω–∞ –∫–Ω–æ–ø–∫–∏
@dp.message_handler(lambda m: m.text == "üç± –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–æ–∫—Å—ã")
async def show_boxes(message: types.Message):
    await message.answer("–°–µ–≥–æ–¥–Ω—è –¥–æ—Å—Ç—É–ø–Ω—ã:\n\n1. ü•ó –°–∞–ª–∞—Ç—ã ‚Äî 1500‚Ç∏\n2. üçï –ü–∏—Ü—Ü–∞ ‚Äî 2000‚Ç∏\n3. üç© –î–µ—Å–µ—Ä—Ç—ã ‚Äî 1000‚Ç∏")


@dp.message_handler(lambda m: m.text == "‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ")
async def about(message: types.Message):
    await message.answer("D√°mdyBox ‚Äî —Å–µ—Ä–≤–∏—Å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å –≤–∫—É—Å–Ω—ã–µ –Ω–∞–±–æ—Ä—ã –ø–æ —Å—É–ø–µ—Ä—Ü–µ–Ω–µ ‚ú®")


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
